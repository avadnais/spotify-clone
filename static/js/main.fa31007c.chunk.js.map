{"version":3,"sources":["spotify.js","Login.js","SideBarOption.js","DataLayer.js","SideBar.js","Header.js","SongRow.js","SearchResults.js","Body.js","Footer.js","Dashboard.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["tokenURL","concat","process","join","Login","react_default","a","createElement","className","src","alt","href","SideBarOption","_ref","playlist","Icon","onClick","title","id","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","SideBar","_playlists$items","spotify","_useDataLayerValue","_useDataLayerValue2","Object","slicedToArray","playlists","dispatch","handleClick","getPlaylist","then","type","selected_playlist","src_SideBarOption","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","key","name","Header","_user$images$","user","Search_default","placeholder","onChange","e","target","search_results","search","r","Avatar","images","url","display_name","window","localStorage","clear","document","getElementById","innerHTML","SongRow","_track$album","_track$album$images$","item","playSong","i","_track","track","album","artists","artist","SearchResultsTrack","play","_useState","useState","_useState2","open","setOpen","handlePlusClick","AddCircleOutline_default","Modal","onClose","aria-labelledby","aria-describedby","Box","SearchResultsAlbum","_ref2","SearchResultsPlaylist","_ref3","Body","_search_results$track","_search_results$album","_search_results$artis","_search_results$playl","_selected_playlist$tr","_useDataLayerValue2$","playing","console","log","getState","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","getMyCurrentPlaybackState","stop","apply","this","arguments","uris","context_uri","index","setTimeout","useEffect","_callee2","_context2","getUserPlaylists","response","sent","fetchPlaylist","src_Header","tracks","albums","description","Favorite_default","fontSize","followers","total","PlayCircleFilled_default","MoreHoriz_default","src_SongRow","Footer","_track$artists","timer","volume","shuffle","repeat","is_playing","parseInt","device","volume_percent","shuffle_state","repeat_state","getStartingState","handlePlayPause","pause","handleRepeat","nextStatus","setRepeat","Shuffle_default","setShuffle","SkipPrevious_default","skipToPrevious","PauseCircleOutline_default","PlayCircleOutlined_default","SkipNext_default","skipToNext","Repeat_default","RepeatOne_default","Grid","container","spacing","PlaylistPlay_default","VolumeDown","xs","Slider","min","max","step","val","clearTimeout","setVolume","Dashboard","src_SideBar","src_Body","src_Footer","SpotifyWebApi","App","token","_token","getItem","location","hash","substring","split","reduce","initial","parts","decodeURIComponent","access_token","history","pushState","setAccessToken","setItem","getMe","Dashboard_Dashboard","Login_Login","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","objectSpread2","discover_weekly","play_context","ReactDOM","render","StrictMode","DataLayer_DataLayer","loading","src_App_0"],"mappings":"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","file":"static/js/main.fa31007c.chunk.js","sourcesContent":["\r\n/* \r\nstep 1: click login with spotify link\r\nstep 2: redirect to spotify login page\r\nstep 3: redirect back to localhost:3000/\r\n*/\r\n\r\nconst authEndpoint = \"http://accounts.spotify.com/authorize\";\r\nconst redirectURI = \"https://avadnais.github.io/spotify-clone\";\r\nconst clientId = process.env.REACT_APP_CLIENT_ID\r\nconst scopes = [\r\n  \"user-read-playback-state\",\r\n  \"user-modify-playback-state\",\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-top-read\",\r\n  \"playlist-read-private\",\r\n  \"streaming\",\r\n];\r\n\r\nexport const getTokenFromURL = () => {\r\n  return window.location.hash // go to # location in URL (where access token starts)\r\n    .substring(1) //\r\n    .split(\"&\") //\r\n    .reduce((initial, item) => {\r\n      let parts = item.split(\"=\"); // split at =\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const tokenURL = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectURI}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { tokenURL } from \"./spotify\";\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_White.png\" alt=\"logo\"></img>\r\n            <a href={tokenURL}>Login with Spotify</a>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './SideBarOption.css'\r\n\r\nfunction SideBarOption({playlist, Icon, onClick, id, title }) {\r\n\r\n    const handleClick = () => {\r\n        onClick(playlist)\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleClick} className='sideBarOption'>\r\n            {Icon && <Icon className=\"sideBarOption_icon\" />}\r\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBarOption\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n\r\n","import React from \"react\";\r\nimport \"./SideBar.css\";\r\nimport SideBarOption from \"./SideBarOption\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction SideBar({spotify}) {\r\n  const [{ playlists }, dispatch] = useDataLayerValue();\r\n\r\n  const handleClick = (playlist) => { \r\n    spotify.getPlaylist(playlist.id).then(playlist => {\r\n      dispatch({\r\n      type: 'SET_SELECTED_PLAYLIST',\r\n      selected_playlist: playlist\r\n      }) \r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_White.png\"\r\n        alt=\"logo\"\r\n        className=\"logo\"\r\n      />\r\n      <SideBarOption title=\"Home\" Icon={HomeIcon} />\r\n      <SideBarOption title=\"Search\" Icon={SearchIcon} />\r\n      <SideBarOption title=\"Your Library\" Icon={LibraryMusicIcon} />\r\n      <br />\r\n      <strong className=\"sidebar_title\">Playlists</strong>\r\n      <hr />\r\n      {playlists?.items?.map((playlist) => (\r\n          <SideBarOption \r\n          key={playlist.id} \r\n          title={playlist.name} \r\n          onClick={handleClick}\r\n          playlist={playlist} />\r\n      ))}\r\n    </div>\r\n    )\r\n  }\r\nexport default SideBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Header({ spotify }) {\r\n  const [{ user }, dispatch] = useDataLayerValue();\r\n\r\n  const handleChange = (e) => {\r\n    //dispatch results to null to reload previous playlist page when search is empty\r\n    if (e.target.value === \"\") {\r\n      dispatch({\r\n        type: \"SET_SEARCH_RESULTS\",\r\n        search_results: null,\r\n      });\r\n    }\r\n\r\n    spotify\r\n      .search(e.target.value, [\"artist\", \"playlist\", \"track\", \"album\"])\r\n      .then((r) => {\r\n        dispatch({\r\n          type: \"SET_SEARCH_RESULTS\",\r\n          search_results: r,\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.clear();\r\n    document.getElementById('logout').innerHTML = 'Login not saved'\r\n  }\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header_left\">\r\n        <SearchIcon />\r\n        <input\r\n          id=\"searchInput\"\r\n          placeholder=\"Search for artists, songs, or podcasts\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"header_right\">\r\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n        <div className=\"header_right_text\">\r\n          <h4>{user?.display_name}</h4>\r\n          <p onClick={handleLogout} id=\"logout\">Don't save login</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./SongRow.css\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction SongRow({ item, playSong, i }) {\r\n  const _track = item.track;\r\n\r\n  const handleClick = () => {\r\n    playSong(item);\r\n  };\r\n\r\n  const [{ track }] = useDataLayerValue();\r\n\r\n  return (\r\n    <div id={_track.id} className=\"songRow\" onClick={handleClick}>\r\n      <div\r\n        className=\"songRow_index_container\"\r\n        id={\"index_container_\" + _track.id}\r\n      >\r\n        {_track.id === track?.id ? (\r\n            <div className=\"songRow_audioWave\" id=\"songRow_audioWave\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n        ) : (\r\n          <h4 className=\"songRow_index\">{i + 1}</h4>\r\n        )}\r\n      </div>\r\n\r\n      <img className=\"songRow_album\" src={_track?.album?.images[0]?.url} alt=\"\" />\r\n      <div className=\"songRow_info\">\r\n        <h1>{_track.name}</h1>\r\n        <p>\r\n          {_track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {_track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;\r\n","import React, {useState} from \"react\";\r\nimport \"./SearchResults.css\";\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport Modal from '@mui/material/Modal';\r\nimport { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/material\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\n\r\n\r\nfunction SearchResultsTrack({ track, play }) {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [{playlists}] = useDataLayerValue();\r\n\r\n  const handleClick = () => {\r\n    play(track, 'track', track.id);\r\n  };\r\n  \r\n  const handlePlusClick = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const handlePlusClose = () => {\r\n    \r\n  }\r\n\r\n  return (\r\n    <div id={track.id} className=\"searchResult_song\"  >\r\n        <AddCircleOutlineIcon className=\"searchResult_song_icon\" onClick={handlePlusClick}/>\r\n        <Modal\r\n        open={open}\r\n        onClose={handlePlusClick}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box className=\"modalBox\">\r\n          <h3>Add {track.name} to...</h3>\r\n            {playlists.items.map((playlist) => (<p>{playlist.name}</p>))}\r\n        </Box>\r\n      </Modal>\r\n      <img className=\"searchResult_song_album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"searchResult_song_info\" onClick={handleClick}>\r\n        <p>\r\n        <strong>{track.name}</strong> {\" - \"}\r\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SearchResultsAlbum({ album, play }) {\r\n  //console.log(`item in SearchResultAlbum: `, album);\r\n\r\n  const handleClick = () => {\r\n    play(album, \"album\", album.id);\r\n  };\r\n  return (\r\n    <div id={album.id} className=\"searchResults_album\" onClick={handleClick}>\r\n      <img\r\n        className=\"searchResults_album_albumImg\"\r\n        src={album.images[0].url}\r\n        alt=\"\"\r\n      />\r\n      <div className=\"searchResults_album_info\">\r\n        <h1>{album.name}</h1>\r\n        <p>{album.artists.map((artist) => artist.name).join(\", \")}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SearchResultsPlaylist({ playlist, play }) {\r\n  const handleClick = () => {\r\n    play(playlist, \"playlist\", playlist.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id={playlist.id}\r\n      className=\"searchResults_playlist\"\r\n      onClick={handleClick}\r\n    >\r\n\r\n        <img\r\n        className=\"searchResults_playlist_img\"\r\n        src={playlist.images[0]? playlist.images[0].url : 'https://developer.spotify.com/assets/branding-guidelines/icon3@2x.png'}\r\n        alt=\"\"\r\n      />\r\n      <h3>{playlist.name}</h3>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SearchResultsArtist({ artist }) {\r\n  return (\r\n    <div\r\n      id={artist.id}\r\n      className=\"searchResults_artist\" /* onClick={handleClick} */\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport {\r\n  SearchResultsTrack,\r\n  SearchResultsAlbum,\r\n  SearchResultsPlaylist,\r\n  SearchResultsArtist,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Body.css\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport Header from \"./Header\";\r\nimport PlayCircleFilledIcon from \"@mui/icons-material/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport SongRow from \"./SongRow\";\r\nimport {\r\n  SearchResultsTrack,\r\n  SearchResultsAlbum,\r\n  SearchResultsArtist,\r\n  SearchResultsPlaylist,\r\n} from \"./SearchResults\";\r\nimport { display } from \"@mui/system\";\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ selected_playlist, playing, search_results }, dispatch] =\r\n    useDataLayerValue();\r\n\r\n  const play = (item, type, id) => {\r\n    console.log(item);\r\n    document.getElementById(\"searchInput\").value = \"\";\r\n    dispatch({\r\n      type: \"SET_SEARCH_RESULTS\",\r\n      search_results: null,\r\n    });\r\n\r\n    const makePlayCall = () => {\r\n      if (type === \"track\") {\r\n        spotify.play({ uris: [`spotify:${type}:${id}`] });\r\n      } else {\r\n        spotify.play({ context_uri: `spotify:${type}:${id}` }).then(() => {\r\n          spotify.getPlaylist(id).then((r) => {\r\n            dispatch({\r\n              type: \"SET_SELECTED_PLAYLIST\",\r\n              selected_playlist: r,\r\n            });\r\n          });\r\n          if (!playing) {\r\n            dispatch({\r\n              type: \"SET_PLAYING\",\r\n              playing: true,\r\n            });\r\n          }\r\n          dispatch({\r\n            type: \"SET_INDEX\",\r\n            index: 0,\r\n          });\r\n        });\r\n      }\r\n    };\r\n\r\n    const getState = async () =>\r\n      spotify.getMyCurrentPlaybackState().then((r) => {\r\n        //console.log(`response of playback state`, r);\r\n        dispatch({\r\n          type: \"SET_SELECTED_TRACK\",\r\n          track: r.item,\r\n        });\r\n      });\r\n\r\n    makePlayCall();\r\n    setTimeout(() => getState(), 700); // set this timeout because spotify will return unknown\r\n  };\r\n\r\n  const playSong = (item) => {\r\n    dispatch({\r\n      type: \"SET_SELECTED_TRACK\",\r\n      track: item.track,\r\n    });\r\n    if (!playing) {\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    }\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${item.track.id}`],\r\n      })\r\n      .then(() => {\r\n        console.log(`%cPlayback started`, \"color:green\");\r\n      });\r\n  };\r\n\r\n  const handleClickPlaylist = () => {\r\n    play(selected_playlist, \"playlist\", selected_playlist.id);\r\n  };\r\n\r\n  // Fetch user playlists then set current playlist to first playlist\r\n  useEffect(() => {\r\n    console.log(`%cBODY RENDERED in useEffect []`, `color: purple`);\r\n    const fetchPlaylist = async () =>\r\n      await spotify.getUserPlaylists().then((playlists) => {\r\n        dispatch({\r\n          type: \"SET_PLAYLISTS\",\r\n          playlists: playlists,\r\n        });\r\n        spotify.getPlaylist(playlists.items[0].id).then((response) => {\r\n          dispatch({\r\n            type: \"SET_SELECTED_PLAYLIST\",\r\n            selected_playlist: response,\r\n          });\r\n        });\r\n      });\r\n\r\n    fetchPlaylist();\r\n  }, [spotify, dispatch]);\r\n\r\n  if (search_results)\r\n    return (\r\n      <div className=\"body\">\r\n        <Header spotify={spotify} />\r\n        <h1>Search results</h1>\r\n        <div className=\"searchResults\">\r\n          <div className=\"searchResults_tracks\">\r\n            {search_results?.tracks?.items.map((item, i) => (\r\n              <SearchResultsTrack i={i} track={item} play={play} />\r\n            ))}\r\n          </div>\r\n          <h2>Albums</h2>\r\n          <hr />\r\n          <div className=\"searchResults_albums\">\r\n            {search_results?.albums?.items.map((item) => (\r\n              <SearchResultsAlbum album={item} play={play} />\r\n            ))}\r\n          </div>\r\n          <h2>Artists</h2>\r\n          <hr />\r\n          <div className=\"searchResults_artists\">\r\n            {search_results?.artists?.items.map((item) => (\r\n              <p>{item.name}</p>\r\n            ))}\r\n          </div>\r\n          <h2>Playlists</h2>\r\n          <hr />\r\n          <div className=\"searchResults_playlists\">\r\n            {search_results?.playlists?.items.map((item) => (\r\n              <SearchResultsPlaylist playlist={item} play={play} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n      <div className=\"body_info\">\r\n        <img\r\n          className=\"album_cover\"\r\n          src={selected_playlist?.images[0].url}\r\n          alt=\"Album cover\"\r\n        />\r\n        <div className=\"body_infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>{selected_playlist?.name}</h2>\r\n          <p>{selected_playlist?.description}</p>\r\n          <div className=\"numLikes\">\r\n            <FavoriteIcon className=\"likes\" fontSize=\"small\" />\r\n            <p>{selected_playlist?.followers.total}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body_songs\">\r\n        <div className=\"body_icons\">\r\n          <PlayCircleFilledIcon\r\n            className=\"body_shuffle body_green\"\r\n            onClick={handleClickPlaylist}\r\n          />\r\n          <FavoriteIcon className=\"body_green\" fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n        {selected_playlist?.tracks?.items.map((item, i) => (\r\n          <SongRow i={i} item={item} playSong={playSong} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Footer.css\";\r\nimport PlayCircleOutlinedIcon from \"@mui/icons-material/PlayCircleOutlined\";\r\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\r\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\r\nimport ShuffleIcon from \"@mui/icons-material/Shuffle\";\r\nimport RepeatIcon from \"@mui/icons-material/Repeat\";\r\nimport PlaylistPlayIcon from \"@mui/icons-material/PlaylistPlay\";\r\nimport { Grid, Slider } from \"@mui/material\";\r\nimport PauseCircleOutlineIcon from \"@mui/icons-material/PauseCircleOutline\";\r\nimport RepeatOneIcon from '@mui/icons-material/RepeatOne';\r\nimport { Pause, VolumeDown } from \"@mui/icons-material\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Footer({ spotify }) {\r\n  const [{ volume, track, playing, selected_playlist, index, shuffle, repeat }, dispatch] =\r\n    useDataLayerValue();\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    console.log(`%cFOOTER RENDERED`, `color: yellow`);\r\n    const getStartingState = async () =>\r\n      await spotify.getMyCurrentPlaybackState().then((response) => {\r\n        try {\r\n          console.log(`%cgetmyCurrentPlaybackState():`, `color:yellow`);\r\n          console.log(response);\r\n          dispatch({\r\n            type: \"SET_SELECTED_TRACK\",\r\n            track: response.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: response.item.is_playing,\r\n          });\r\n          dispatch({\r\n            type: \"SET_VOLUME\",\r\n            volume: parseInt(response.device.volume_percent),\r\n          });\r\n          dispatch({\r\n            type: \"SET_SHUFFLE_STATE\",\r\n            shuffle: response.shuffle_state\r\n          })\r\n          dispatch({\r\n            type: \"SET_REPEAT_STATE\",\r\n            repeat: response.repeat_state\r\n          })\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      });\r\n\r\n    getStartingState();\r\n    console.log(`%cTRACK:${track}`, `color: yellow`);\r\n  }, [spotify, dispatch]);\r\n\r\n  let timer;\r\n  const handleChange = (e, val) => {\r\n    //MUI Slider location of value\r\n    clearTimeout(timer)\r\n    timer = setTimeout(() => {\r\n      dispatch({\r\n            type: \"SET_VOLUME\",\r\n            volume: parseInt(val),\r\n      });\r\n      spotify.setVolume(val);\r\n      }, 5)\r\n\r\n    };\r\n\r\n  const handlePlayPause = () => {\r\n    if (playing) {\r\n      spotify.pause();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: false,\r\n      });\r\n    } else {\r\n      spotify.play();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSkipNext = () => {\r\n    // can't skip on last song of playlist\r\n    // Set timeout to wait for skip to next to update before calling to get the state\r\n    \r\n    spotify.skipToNext().then(() => {\r\n      setTimeout(() => {\r\n        spotify.getMyCurrentPlaybackState().then((r) => {\r\n          console.log(r);\r\n          dispatch({\r\n            type: \"SET_SELECTED_TRACK\",\r\n            track: r.item,\r\n          });\r\n          dispatch({\r\n            type: 'SET_REPEAT_STATE',\r\n            repeat: r.repeat_state\r\n          })\r\n        });\r\n      }, 250);\r\n    });\r\n  };\r\n\r\n  const handleSkipBack = () => {\r\n    // can't skip back on first song of playlist\r\n    spotify.skipToPrevious().then(() => {\r\n      setTimeout(() => {\r\n        spotify.getMyCurrentPlaybackState().then((r) => {\r\n          console.log(r);\r\n          dispatch({\r\n            type: \"SET_SELECTED_TRACK\",\r\n            track: r.item,\r\n          });\r\n          dispatch({\r\n            type: 'SET_REPEAT_STATE',\r\n            repeat: r.repeat_state\r\n          })\r\n        });\r\n      }, 250);\r\n    });\r\n  };\r\n\r\n  const handleShuffle = () => {\r\n    spotify.setShuffle(!shuffle);\r\n    dispatch({\r\n      type: 'SET_SHUFFLE_STATE',\r\n      shuffle: !shuffle \r\n    })\r\n  };\r\n\r\n  const handleRepeat = () => {\r\n    let nextStatus;\r\n    //console.log(`repeat: `, repeat)\r\n\r\n    if (repeat === 'off') nextStatus = 'context'\r\n    else if (repeat === 'context') nextStatus = 'track'\r\n    else if (repeat === 'track') nextStatus = 'off'\r\n    spotify.setRepeat(nextStatus)\r\n    dispatch({\r\n      type: 'SET_REPEAT_STATE',\r\n      repeat: nextStatus\r\n    })\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer\">\r\n        <div className=\"footer_left\">\r\n          <img\r\n            src={track?.album?.images[0]?.url}\r\n            alt={track?.name}\r\n            className=\"footer_albumLogo\"\r\n          />\r\n          {track && (\r\n            <div className=\"footer_songInfo\">\r\n              <h4>{track.name}</h4>\r\n              <p>{track?.artists?.map((artist) => artist.name).join(\", \")}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"footer_center\">\r\n          <div className=\"footer_icons\">\r\n            <ShuffleIcon className={shuffle && \"footer_green\"} onClick={handleShuffle} />\r\n            <SkipPreviousIcon\r\n              className=\"footer_icon\"\r\n              onClick={handleSkipBack}\r\n            />\r\n            {playing ? (\r\n              <PauseCircleOutlineIcon\r\n                fontSize=\"large\"\r\n                className=\"footer_icon\"\r\n                onClick={handlePlayPause}\r\n              />\r\n            ) : (\r\n              <PlayCircleOutlinedIcon\r\n                fontSize=\"large\"\r\n                className=\"footer_icon\"\r\n                onClick={handlePlayPause}\r\n              />\r\n            )}\r\n            \r\n            <SkipNextIcon className=\"footer_icon\" onClick={handleSkipNext} />\r\n            {repeat === 'off' && <RepeatIcon className=\"footer_icon\" onClick={handleRepeat} />}\r\n            {repeat === 'context' && <RepeatIcon className=\"footer_green\" onClick={handleRepeat} />}\r\n            {repeat === 'track' && <RepeatOneIcon className=\"footer_green\" onClick={handleRepeat} />}\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"footer_right\">\r\n          <Grid container spacing={2}>\r\n            <Grid item>\r\n              <PlaylistPlayIcon />\r\n            </Grid>\r\n            <Grid item>\r\n              <VolumeDown />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Slider\r\n                min={0}\r\n                max={100}\r\n                value={volume}\r\n                step={1}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport './Dashboard.css'\r\nimport SideBar from \"./SideBar\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport const Dashboard = ({spotify}) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"dashboard_body\">\r\n                <SideBar spotify={spotify}/>\r\n                <Body spotify={spotify}/>\r\n            </div>\r\n            <Footer spotify={spotify}/>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Login } from \"./Login\";\r\nimport { getTokenFromURL } from \"./spotify\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport { Dashboard } from \"./Dashboard\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nexport const App = () => {\r\n  const [{ token }, dispatch] = useDataLayerValue();\r\n\r\n  // run code based on given condition (blank second param = run only once)\r\n  useEffect(() => {\r\n    let _token = window.localStorage.getItem(\"token\")\r\n    if (!_token) {\r\n      _token = getTokenFromURL().access_token;\r\n      window.history.pushState({}, null, \"/\"); //clear the url after the hash\r\n\r\n      if (_token) {\r\n        spotify.setAccessToken(_token);\r\n        window.localStorage.setItem(\"token\", _token);\r\n        dispatch({\r\n          type: \"SET_TOKEN\",\r\n          token: _token,\r\n        });\r\n      }\r\n    }\r\n\r\n      \r\n      spotify.setAccessToken(_token);\r\n      dispatch({\r\n        type: \"SET_TOKEN\",\r\n        token: _token,\r\n      });\r\n\r\n    spotify.getMe().then((user) => {\r\n      dispatch({\r\n        type: \"SET_USER\",\r\n        user: user,\r\n      });\r\n    });\r\n\r\n    //set first device in list to active and get volume\r\n    const fetchDevices = async () => {\r\n      await spotify.getMyDevices().then((r) => {\r\n        dispatch({\r\n          type: \"SET_VOLUME\",\r\n          volume: r.devices[0].volume_percent,\r\n        });\r\n        dispatch({\r\n          type: \"SET_DEVICE\",\r\n          device_id: r.devices[0].id,\r\n        });\r\n        spotify.transferMyPlayback([r.devices[0].id], {\r\n          is_active: \"true\",\r\n        });\r\n      });\r\n    };\r\n  }, [dispatch]);\r\n  \r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {token ? <Dashboard spotify={spotify} /> : <Login />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    discover_weekly: null,\r\n    token: null,\r\n    spotify: null,\r\n    loading: true,\r\n    index: null,\r\n    volume: null\r\n}\r\n\r\n// LISTENER\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n\r\n    //Action -> type, [payload]\r\n\r\n    switch(action.type) {\r\n        case 'SET_USER': \r\n            return {\r\n                ...state, \r\n                user: action.user,\r\n            }\r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case 'SET_PLAYLISTS':\r\n            return {\r\n                ...state,\r\n                playlists: action.playlists\r\n            }\r\n        case 'SET_SELECTED_PLAYLIST':\r\n            return {\r\n                ...state,\r\n                selected_playlist: action.selected_playlist\r\n            }\r\n        case 'SET_DISCOVER_WEEKLY':\r\n            return {\r\n                ...state,\r\n                discover_weekly: action.discover_weekly\r\n            }\r\n        case 'SET_SELECTED_TRACK':\r\n            return {\r\n                ...state,\r\n                track: action.track\r\n            }\r\n        case 'SET_PLAYING':\r\n            return {\r\n                ...state,\r\n                playing: action.playing,\r\n            }\r\n        case 'SET_VOLUME':\r\n            return {\r\n                ...state,\r\n                volume: action.volume\r\n            }\r\n        case 'SET_PLAY_CONTEXT':\r\n            return {\r\n                ...state,\r\n                play_context: action.play_context\r\n            }\r\n        case 'SET_INDEX':\r\n            return {\r\n                ...state,\r\n                index: action.index\r\n            }\r\n        case 'SET_SHUFFLE_STATE':\r\n            return {\r\n                ...state,\r\n                shuffle: action.shuffle\r\n            }\r\n        case 'SET_REPEAT_STATE':\r\n            return {\r\n                ...state,\r\n                repeat: action.repeat\r\n            }\r\n        case 'SET_SEARCH_RESULTS':\r\n            return {\r\n                ...state,\r\n                search_results: action.search_results\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {DataLayer} from './DataLayer'\nimport reducer, {initialState} from './reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}