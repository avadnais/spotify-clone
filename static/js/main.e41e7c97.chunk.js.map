{"version":3,"sources":["spotify.js","Login.js","SideBarOption.js","DataLayer.js","SideBar.js","Header.js","SongRow.js","Body.js","Footer.js","Dashboard.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["tokenURL","concat","process","join","Login","react_default","a","createElement","className","src","alt","href","SideBarOption","_ref","playlist","Icon","onClick","title","id","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","SideBar","_playlists$items","spotify","_useDataLayerValue","_useDataLayerValue2","Object","slicedToArray","playlists","dispatch","handleClick","getPlaylist","then","type","selected_playlist","src_SideBarOption","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","key","name","Header","_user$images$","user","Search_default","placeholder","Avatar","images","url","display_name","SongRow","item","playSong","i","_track","track","album","artists","artist","Body","_selected_playlist$tr","_useDataLayerValue2$","playing","play","uris","console","log","useEffect","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","getUserPlaylists","response","abrupt","sent","stop","apply","this","arguments","fetchPlaylist","src_Header","description","PlayCircleFilled_default","context_uri","tracks","Favorite_default","fontSize","MoreHoriz_default","src_SongRow","Footer","volume","getMyCurrentPlaybackState","getStartingState","Shuffle_default","SkipPrevious_default","PlayCircleOutlined_default","pause","SkipNext_default","skipToNext","Repeat_default","Grid","container","spacing","PlaylistPlay_default","VolumeDown","xs","Slider","min","max","step","onChangeCommitted","e","_volume","target","childNodes","setVolume","Dashboard","src_SideBar","src_Body","src_Footer","SpotifyWebApi","App","token","_token","window","location","hash","substring","split","reduce","initial","parts","decodeURIComponent","access_token","history","pushState","setAccessToken","getMe","getMyDevices","r","devices","volume_percent","device_id","transferMyPlayback","is_active","getMyCurrentPlayingTrack","current_track","is_playing","Dashboard_Dashboard","Login_Login","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","objectSpread2","discover_weekly","ReactDOM","render","StrictMode","DataLayer_DataLayer","loading","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e41e7c97.chunk.js","sourcesContent":["\r\n/* \r\nstep 1: click login with spotify link\r\nstep 2: redirect to spotify login page\r\nstep 3: redirect back to localhost:3000/\r\n*/\r\n\r\nconst authEndpoint = \"http://accounts.spotify.com/authorize\";\r\nconst redirectURI = \"http://avadnais.github.io/spotify-clone\";\r\nconst clientId = process.env.REACT_APP_CLIENT_ID\r\nconst scopes = [\r\n  \"user-read-playback-state\",\r\n  \"user-modify-playback-state\",\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-top-read\",\r\n  \"playlist-read-private\",\r\n  \"streaming\",\r\n];\r\n\r\nexport const getTokenFromURL = () => {\r\n  return window.location.hash // go to # location in URL (where access token starts)\r\n    .substring(1) //\r\n    .split(\"&\") //\r\n    .reduce((initial, item) => {\r\n      let parts = item.split(\"=\"); // split at =\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const tokenURL = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectURI}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { tokenURL } from \"./spotify\";\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_White.png\" alt=\"logo\"></img>\r\n            <a href={tokenURL}>Login with Spotify</a>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './SideBarOption.css'\r\n\r\nfunction SideBarOption({playlist, Icon, onClick, id, title }) {\r\n\r\n    const handleClick = () => {\r\n        onClick(playlist)\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleClick} className='sideBarOption'>\r\n            {Icon && <Icon className=\"sideBarOption_icon\" />}\r\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBarOption\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n\r\n","import React from \"react\";\r\nimport \"./SideBar.css\";\r\nimport SideBarOption from \"./SideBarOption\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction SideBar({spotify}) {\r\n  const [{ playlists }, dispatch] = useDataLayerValue();\r\n\r\n  const handleClick = (playlist) => { \r\n    spotify.getPlaylist(playlist.id).then(playlist => {\r\n      dispatch({\r\n      type: 'SET_SELECTED_PLAYLIST',\r\n      selected_playlist: playlist\r\n      }) \r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_White.png\"\r\n        alt=\"logo\"\r\n        className=\"logo\"\r\n      />\r\n      <SideBarOption title=\"Home\" Icon={HomeIcon} />\r\n      <SideBarOption title=\"Search\" Icon={SearchIcon} />\r\n      <SideBarOption title=\"Your Library\" Icon={LibraryMusicIcon} />\r\n      <br />\r\n      <strong className=\"sidebar_title\">Playlists</strong>\r\n      <hr />\r\n      {playlists?.items?.map((playlist) => (\r\n          <SideBarOption \r\n          key={playlist.id} \r\n          title={playlist.name} \r\n          onClick={handleClick}\r\n          playlist={playlist} />\r\n      ))}\r\n    </div>\r\n    )\r\n  }\r\nexport default SideBar;\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport {Avatar} from \"@mui/material\";\r\nimport {useDataLayerValue} from './DataLayer';\r\n\r\nfunction Header() {\r\n\r\n    const [{ user }] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"header_left\">\r\n                <SearchIcon />\r\n                <input \r\n                placeholder=\"Search for artists, songs, or podcasts\" \r\n                type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"header_right\">\r\n                <Avatar src={user?.images[0]?.url} alt={user?.display_name}/>\r\n                <h4>{user?.display_name}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect } from \"react\";\r\nimport \"./SongRow.css\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction SongRow({ item, playSong, i }) {\r\n  const _track = item.track;\r\n\r\n  const handleClick = () => {\r\n    playSong(item);\r\n  };\r\n\r\n  const [{ track }] = useDataLayerValue();\r\n\r\n  return (\r\n    <div id={_track.id} className=\"songRow\" onClick={handleClick}>\r\n      <div\r\n        className=\"songRow_index_container\"\r\n        id={\"index_container_\" + _track.id}\r\n      >\r\n        {_track.id === track?.id ? (\r\n            <div className=\"songRow_audioWave\" id=\"songRow_audioWave\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n        ) : (\r\n          <h4 className=\"songRow_index\">{i + 1}</h4>\r\n        )}\r\n      </div>\r\n\r\n      <img className=\"songRow_album\" src={_track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow_info\">\r\n        <h1>{_track.name}</h1>\r\n        <p>\r\n          {_track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {_track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Body.css\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport Header from \"./Header\";\r\nimport PlayCircleFilledIcon from \"@mui/icons-material/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport SongRow from \"./SongRow\";\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ selected_playlist, playing }, dispatch] = useDataLayerValue();\r\n\r\n  const playPlaylist = () => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:${selected_playlist.id}`,\r\n      })\r\n      .then(() => {\r\n          dispatch({\r\n            type: \"SET_CURRENT_SELECTED_TRACK\",\r\n            track: selected_playlist.tracks[0]\r\n          })\r\n          if (!playing) {\r\n            dispatch({\r\n              type: \"SET_PLAYING\",\r\n              playing: true,\r\n            });\r\n          }\r\n        }\r\n      );\r\n  };\r\n\r\n  const playSong = (item) => {\r\n    dispatch({\r\n      type: \"SET_SELECTED_TRACK\",\r\n      track: item.track,\r\n    });\r\n    if (!playing) {\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    }\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${item.track.id}`],\r\n      })\r\n      .then(() => {\r\n        console.log(`%cPlayback started`, \"color:green\");\r\n      });\r\n  };\r\n\r\n  // Fetch user playlists then set current playlist to first playlist\r\n  useEffect(() => {\r\n    console.log(`%cBODY RENDERED in useEffect []`, `color: purple`)\r\n    const fetchPlaylist = async () => await spotify.getUserPlaylists().then((playlists) => {\r\n      dispatch({\r\n        type: \"SET_PLAYLISTS\",\r\n        playlists: playlists,\r\n      });\r\n      spotify.getPlaylist(playlists.items[0].id).then((response) => {\r\n      dispatch({\r\n        type: \"SET_SELECTED_PLAYLIST\",\r\n        selected_playlist: response,\r\n      });\r\n    })\r\n  })\r\n    fetchPlaylist()\r\n  }, [spotify, dispatch])\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header />\r\n      <div className=\"body_info\">\r\n        <img\r\n          className=\"album_cover\"\r\n          src={selected_playlist?.images[0].url}\r\n          alt=\"Album cover\"\r\n        />\r\n        <div className=\"body_infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>{selected_playlist?.name}</h2>\r\n          <p>{selected_playlist?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body_songs\">\r\n        <div className=\"body_icons\">\r\n          <PlayCircleFilledIcon className=\"body_shuffle body_green\" onClick={playPlaylist}/>\r\n          <FavoriteIcon className=\"body_green\" fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n        {selected_playlist?.tracks?.items.map((item, i) => (\r\n          <SongRow i={i} item={item} playSong={playSong} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Footer.css\";\r\nimport PlayCircleOutlinedIcon from \"@mui/icons-material/PlayCircleOutlined\";\r\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\r\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\r\nimport ShuffleIcon from \"@mui/icons-material/Shuffle\";\r\nimport RepeatIcon from \"@mui/icons-material/Repeat\";\r\nimport PlaylistPlayIcon from \"@mui/icons-material/PlaylistPlay\";\r\nimport { Grid, Slider } from \"@mui/material\";\r\nimport { VolumeDown } from \"@mui/icons-material\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Footer({ spotify }) {\r\n  const [{ volume, track, playing }, dispatch] = useDataLayerValue();\r\n  useEffect(() => {\r\n    console.log(`%cFOOTER RENDERED`, `color: yellow`);\r\n    const getStartingState = async() => await spotify.getMyCurrentPlaybackState().then((response) => {\r\n      dispatch({\r\n        type: \"SET_SELECTED_TRACK\",\r\n        track: response.item.track,\r\n      });\r\n      if (!playing) {\r\n        dispatch({\r\n          type: \"SET_PLAYING\",\r\n          playing: true,\r\n        });\r\n      }\r\n    });\r\n    getStartingState();\r\n  }, [spotify, dispatch]);\r\n\r\n  useEffect(() => {\r\n    console.log(`%cFOOTER RENDERED`, `color: cyan`);\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    let _volume = e.target.childNodes[0].value; //MUI Slider location of value\r\n    dispatch({\r\n      type: \"SET_VOLUME\",\r\n      volume: _volume,\r\n    });\r\n    spotify.setVolume(_volume);\r\n  };\r\n\r\n  const handlePlayPause = () => {\r\n    if (playing) {\r\n      spotify.pause();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: false,\r\n      });\r\n    } else {\r\n      spotify.play();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSkipNext = () => {\r\n    spotify.skipToNext().then(() => {\r\n      spotify.getMyCurrentPlaybackState().then((response) => {\r\n        dispatch({\r\n          type: \"SET_SELECTED_TRACK\",\r\n          track: response.item.track,\r\n        });\r\n        dispatch({\r\n          type: \"SET_PLAYING\",\r\n          playing: true,\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer\">\r\n        <div className=\"footer_left\">\r\n          <img\r\n            src={track?.album.images[0].url}\r\n            alt={track?.name}\r\n            className=\"footer_albumLogo\"\r\n          />\r\n          {track && (\r\n            <div className=\"footer_songInfo\">\r\n              <h4>{track.name}</h4>\r\n              <p>{track.artists.map((artist) => artist.name).join(\", \")}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"footer_center\">\r\n          <div className=\"footer_icons\">\r\n            <ShuffleIcon className=\"footer_green\" />\r\n            <SkipPreviousIcon className=\"footer_icon\" />\r\n            <PlayCircleOutlinedIcon\r\n              fontSize=\"large\"\r\n              className=\"footer_icon\"\r\n              onClick={handlePlayPause}\r\n            />\r\n            <SkipNextIcon className=\"footer_icon\" onClick={handleSkipNext} />\r\n            <RepeatIcon className=\"footer_green\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"footer_right\">\r\n          <Grid container spacing={2}>\r\n            <Grid item>\r\n              <PlaylistPlayIcon />\r\n            </Grid>\r\n            <Grid item>\r\n              <VolumeDown />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Slider\r\n                min={0}\r\n                max={100}\r\n                value={volume}\r\n                step={1}\r\n                onChangeCommitted={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport './Dashboard.css'\r\nimport SideBar from \"./SideBar\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport const Dashboard = ({spotify}) => {\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"dashboard_body\">\r\n                <SideBar spotify={spotify}/>\r\n                <Body spotify={spotify}/>\r\n            </div>\r\n            <Footer spotify={spotify}/>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Login } from \"./Login\";\r\nimport { getTokenFromURL } from \"./spotify\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport { Dashboard } from \"./Dashboard\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nexport const App = () => {\r\n  const [{ token }, dispatch] = useDataLayerValue();\r\n  \r\n\r\n  // run code based on given condition (blank second param = run only once)\r\n  useEffect(() => {\r\n    const _token = getTokenFromURL().access_token;\r\n    window.history.pushState({}, null, \"/\"); //clear the url after the hash\r\n\r\n    if(_token) spotify.setAccessToken(_token);\r\n\r\n    dispatch({\r\n      type: 'SET_TOKEN',\r\n      token: _token\r\n    })\r\n\r\n    spotify.getMe().then((user) => {\r\n      dispatch({\r\n        type: \"SET_USER\",\r\n        user: user,\r\n      });\r\n    });\r\n\r\n    //set first device in list to active and get volume\r\n     spotify.getMyDevices().then((r) => {\r\n      dispatch({\r\n        type: 'SET_VOLUME',\r\n        volume: r.devices[0].volume_percent\r\n      })\r\n      dispatch({\r\n        type: 'SET_DEVICE',\r\n        device_id: r.devices[0].id\r\n      })\r\n      spotify.transferMyPlayback([r.devices[0].id], {\r\n        'is_active': 'true'\r\n      })\r\n    }) \r\n\r\n      spotify.getMyCurrentPlayingTrack().then((response) => {\r\n      console.log(\"Currently playing 🎵\", response.item.id)\r\n      dispatch({\r\n        type: 'SET_SELECTED_TRACK',\r\n        current_track: response.item.id\r\n      })\r\n      console.log(response)\r\n      dispatch({\r\n        type: 'SET_PLAYING',\r\n        playing: response.is_playing\r\n      })\r\n    })  \r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {token ? <Dashboard spotify={spotify}/> : <Login />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    discover_weekly: null,\r\n    token: null,\r\n    spotify: null,\r\n    loading: true\r\n}\r\n\r\n// LISTENER\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n\r\n    //Action -> type, [payload]\r\n\r\n    switch(action.type) {\r\n        case 'SET_USER': \r\n            return {\r\n                ...state, \r\n                user: action.user,\r\n            }\r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case 'SET_PLAYLISTS':\r\n            return {\r\n                ...state,\r\n                playlists: action.playlists\r\n            }\r\n        case 'SET_SELECTED_PLAYLIST':\r\n            return {\r\n                ...state,\r\n                selected_playlist: action.selected_playlist\r\n            }\r\n        case 'SET_DISCOVER_WEEKLY':\r\n            return {\r\n                ...state,\r\n                discover_weekly: action.discover_weekly\r\n            }\r\n        case 'SET_SELECTED_TRACK':\r\n            return {\r\n                ...state,\r\n                track: action.track\r\n            }\r\n        case 'SET_PLAYING':\r\n            return {\r\n                ...state,\r\n                playing: action.playing,\r\n            }\r\n        case 'SET_VOLUME':\r\n            return {\r\n                ...state,\r\n                volume: action.volume\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {DataLayer} from './DataLayer'\nimport reducer, {initialState} from './reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}